#chat-screen{
    background: linear-gradient(rgb(168, 101, 204)3%,rgb(63, 63, 143));
    height: 500vh;
}

/*아래와 같이 .찌고 표현할때, 띄어쓰기 주의 */
#chat-screen .status-bar, 
#chat-screen .alt-header{
    top: 0;
    position: fixed;
    width: 100%;
    box-sizing: border-box;
    background: linear-gradient(rgb(168, 101, 204));

}


/*가운데 정렬하는 방법 -> 부모요소에 넓이를 33%씩 주고 각 자식요소들을 각각 오른쪽 왼쪽 중앙으로 정렬함*/
.alt-header__column{
    width: 33%;
}

.alt-header__column:first-child{
    margin-right: auto;
}

.alt-header__column:last-child{
    display: flex;
    justify-content: flex-end;
}

.alt-header__column:nth-child(2){
    text-align: center;
}

/*-----------------------------------정렬꿑
z-index는 div의 위치가 맨 앞에서부터 몇번째 인지를 표시함.
*/

#chat-screen .status-bar{
    z-index: 2;                         /* chat스크린에 있는 스타투스 바는 2번째 레이어임*/
}

#chat-screen .alt-header{
    z-index: 1;
    top: 10px; 
    /*status bar 보이게 하기 위헤서 */
}

@keyframes fadeIn{
   
    from{
        transform: translateY(10px);
        opacity: 0;
    }
    to{
        transform: nones;
        opacity: 1;
    }
   

}

.main-chat{
    margin-top: 120px;
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: 14px;
    animation: fadeIn 1s ease-in-out;

    /*div의 width가 글자길이만큼 줄어드는데, display flex를
    하면 글자크기에 맞춰서 줄어드는듯, 그리고 flex direction을 column으로 히면
    다시 block특성에 맞게 늘어나는 듯 */
}


.chat__timestamp{
    color: white;
    background-color: rgb(198, 161, 232);
    padding:  25px;
    border-radius: 25px;
    margin-bottom: 20px;
    
}
.message-row {
    width: 100%;
    display: flex;
    margin-bottom: 15px;
   
}

.message-row img{
    width: 50px;
    height: 50px;
    border-radius: 10px;
    margin-right: 5px;
}

.message__author{
    opacity: 0.8;
    font-size: 13px;
    margin-bottom: 8px;
    display: block;
    
}

.message__buble{
    background-color: white;
    padding: 13px;
    border-radius: 15px;
    border-top-left-radius: 0; /* 말풍선 모양으로 만들기 위해 이 부분을 뾰족하게 */
    margin-right: 5px;
}

.message_info{
    display: flex;
   align-items: flex-end; /*말풍선은 높고 시간은 높이가 낮아서, flex-end
   를 사용하면 시간만 밑으로 떨어지는 효과가 발생함 */
}

.message__time{
    opacity: 0.5;
    font-size: 10px;
}

.message-row--own{
    justify-content: flex-end; /*내 말풍선을 오른쪽으로 정렬함*/
    
}

.message-row--own .message__buble{
    background-color: rgb(208, 155, 209);
    border-top-right-radius: 0px; /*모서리 방향 반대로 */
    border-top-left-radius: 15px;
}

/* .message-row--own .message__buble{
    order: 1 ; order은 flex children에게만 적용가능
    margin-left: 5px;
}

.message-row--own .message__time{
    order:0;
} 

그렇지만 코드가 다소 복잡하기 때문에 말풍선과 시간의 순서를 바꾸기위해 그냥
row-reverse사용해도 됨  */

.message-row--own .message_info{
    flex-direction: row-reverse;
    margin-left: 5px;
}

.reply{
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: white;
    display: flex;
    justify-content: space-between;
    padding: 5px 25px;
    align-items: center;
    box-sizing: border-box;
}

.reply .reply__column:first-child{
    width: 10%;
}
.reply .reply__column:last-child{
    width: 90%;
    position: relative;
}


/*버튼 안에 있는 arrow이모티콘 까지 같이 움직이는것을 막기 위해 direct로 */
.reply__column:last-child > i,
.reply__column button {
    position: absolute;
    right: 0;
    top: 8px;
    right: -3px;
    
}


.reply__column button {
    background-color:rgb(208, 155, 209); ;
    border-style: none;
    border-radius: 50%;
    width: 25px; /*버튼에 넓이와 높이를 주니까 동그랗게 변함. 이거 안주면 약간 홀쭉하고 기울여져보임*/
    height: 25px;
   
}


.reply__column button:focus,
.reply__column button:active {
    outline: none;
   
    
}

.reply__column:last-child >i{
    right: 40px;
    top: 12px;
}

.reply input {
    padding: 7px;
    height: 30px;
    width: 100%;
    border: var(--main-border);
    border-radius: 20px;
    transition: all 1s ease-in-out;
    
    
    /*이렇게만 넓이가 안먹음. input이 column안에 있는데
    column(div)은 넓이를 갖지 않기 때문
    그래서 위와 같이 column에 width를 넣어주었음
    컬럼에 주어야지 -> input도 width 가질 수 있음 
    */
}

.reply input:focus{
    border-color: #d09bd1 ;
    outline: none;
    transition: border-color 0.3s ease-in-out;
    width: 98vw;
    transform: translateX(-13%) translateY(-80px) ;
  
}

.reply:focus-within{
    transform:  translateY(80px);
}

.reply i{
    opacity: 0.5;
}


.reply .reply__column:first-child,
.reply .fa-smile-wink,
.reply button  {
    transition: opacity 0.3s ease-in-out;
}


.reply:focus-within .reply__column:first-child
.reply:focus-within .fa-smile-wink,
.reply:focus-within button {
    opacity: 0;
}
/*focus within은 내부에 focus된 element가 있는지 보는 것.
만약 focus된게 있다면 뒤에 있는 애들이 실행될것임 */


